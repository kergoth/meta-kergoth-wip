#!/bin/bash

set -euo pipefail

usage () {
    cat >&2 <<END
${0##*/} [OPTIONS..] [[LAYER]..]

Configure BBLAYERS to include the specified layers (by name, for a distro,
machine, or sdkmachine).

LAYER is a layer's name, as specified in BBFILE_COLLECTIONS in the layer.conf.

Options:

  -d DISTRO     Include the layers which include conf/distro/DISTRO.conf
  -m MACHINE    Include the layers which include conf/machine/MACHINE.conf
  -M SDKMACHINE Include the layers which include conf/machine-sdk/SDKMACHINE.conf
  -f PATH       Include the layers which include PATH
  -k            Keep the existing layers rather than starting fresh
  -s            Sort BBLAYERS by layer priority
END
    exit 2
}


tmpdir="$(mktemp -d -t "${0##*/}.XXXXXX")" || exit 1
trap 'rm -rf "$tmpdir"' EXIT INT TERM
layersfile="$tmpdir/layers"
pathsfile="$tmpdir/paths"

sort=0
keep_existing=0
while getopts d:m:M:ksh opt; do
    case "$opt" in
        d)
            echo "conf/distro/$OPTARG.conf" >>"$pathsfile"
            ;;
        m)
            echo "conf/machine/$OPTARG.conf" >>"$pathsfile"
            ;;
        M)
            echo "conf/machine-sdk/$OPTARG.conf" >>"$pathsfile"
            ;;
        f)
            echo "$OPTARG" >>"$pathsfile"
            ;;
        k)
            keep_existing=1
            ;;
        s)
            sort=1
            ;;
        \?|h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ] && ! [ -s "$pathsfile" ]; then
    exit 0
fi

bitbake-layers add-layer "$(dirname "$(dirname "$0")")"
if [ $keep_existing -eq 0 ]; then
    # FIXME: We don't want to reset until after we find the layers, so we prefer the
    # layers already configured in BBLAYERS now to those we find on disk.
    bitbake-layers reset-layers
fi
bitbake-layers add-layer "$(dirname "$(dirname "$0")")"

if [ $# -ne 0 ]; then
    for arg; do
        if [ -f "$arg/conf/layer.conf" ]; then
            echo "$arg" >>"$layersfile"
        else
            echo "$arg"
        fi
    done \
        | tr '\n' '\0' \
        | xargs -0 bitbake-layers find-layer-by-name >>"$layersfile.new" \
            && cat "$layersfile.new" >>"$layersfile"
fi

cat "$pathsfile" \
    | tr '\n' '\0' \
    | xargs -0 bitbake-layers find-layer-with-path lib/bblayers/mel.py >>"$layersfile"

cat "$layersfile" \
    | grep -Ev '^(NOTE|WARNING|ERROR:)' \
    | tr '\n' '\0' \
    | xargs -0 bitbake-layers add-layer

if [ $sort -eq 1 ]; then
    bitbake-layers sort-layers
fi
